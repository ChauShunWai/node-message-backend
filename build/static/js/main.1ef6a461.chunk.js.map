{"version":3,"sources":["components/Image/Image.js","pages/Feed/SinglePost/SinglePost.js","components/Layout/Layout.js","components/Backdrop/Backdrop.js","components/Toolbar/Toolbar.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Feed/Post/Post.js","components/Form/Input/Input.js","components/Form/Input/FilePicker.js","util/validators.js","util/image.js","components/Feed/FeedEdit/FeedEdit.js","components/Paginator/Paginator.js","components/Loader/Loader.js","pages/Feed/Feed.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","App.js","index.js"],"names":["image","props","className","style","backgroundImage","imageUrl","backgroundSize","contain","backgroundPosition","left","SinglePost","state","title","author","date","content","graphqlQuery","query","variables","postId","this","match","params","fetch","method","headers","Authorization","token","body","JSON","stringify","then","res","json","resData","console","log","data","post","arrayBuffer","a","setState","Buffer","from","toString","errors","status","Error","creator","name","createdAt","catch","err","Component","layout","header","mobileNav","children","backdrop","ReactDOM","createPortal","open","join","onClick","document","getElementById","toolbar","mobileToggle","onOpen","logo","navItems","id","text","link","auth","navigationItems","filter","item","isAuth","map","key","mobile","to","exact","onChoose","onLogout","mainNavigation","onOpenMobileNav","mobileNavigation","onChooseItem","button","design","mode","disabled","loading","type","modal","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","error","onHandle","message","onStartEdit","onDelete","input","label","htmlFor","control","valid","touched","required","value","placeholder","onChange","e","target","files","onBlur","rows","filePicker","trim","length","config","isValid","min","max","email","test","generateBase64FromImage","imageFile","reader","FileReader","promise","Promise","resolve","reject","onload","result","onerror","undefined","readAsDataURL","POST_FORM","validators","FeedEdit","postForm","formIsValid","imagePreview","postInputChangeHandler","b64","prevState","validator","updatedForm","inputName","inputBlurHandler","cancelPostChangeHandler","onCancelEdit","acceptPostChangeHandler","onFinishEdit","prevProps","editing","selectedPost","imagePath","bind","FilePicker","Image","paginator","currentPage","onPrevious","lastPage","onNext","loader","Feed","isEditing","posts","totalPosts","editPost","postPage","postsLoading","editLoading","loadPosts","direction","page","catchError","statusUpdateHandler","event","preventDefault","newPostHandler","startEditPostHandler","find","p","_id","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","fileResData","filePath","replace","reduce","acc","cur","includes","updatePost","createPost","updatedPosts","findIndex","unshift","pop","multerError","statusInputChangeHandler","deletePostHandler","user","ErrorHandler","onSubmit","textAlign","marginTop","Math","ceil","Login","loginForm","password","inputChangeHandler","onLogin","Signup","signupForm","onSignup","App","showBackdrop","showMobileNav","userId","authLoading","mobileNavHandler","isOpen","backdropClickHandler","logoutHandler","localStorage","removeItem","loginHandler","authData","login","setItem","expiryDate","Date","getTime","toISOString","setAutoLogout","signupHandler","history","milliseconds","setTimeout","getItem","remainingMilliseconds","routes","path","render","withRouter"],"mappings":"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","file":"static/js/main.1ef6a461.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Image.css';\n\nconst image = props => (\n  <div\n    className='image'\n    style={{\n      backgroundImage: `url('${props.imageUrl}')`,\n      backgroundSize: props.contain ? 'contain' : 'cover',\n      backgroundPosition: props.left ? 'left' : 'center'\n    }}\n  />\n);\n\nexport default image;\n","import React, { Component } from 'react';\n\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nclass SinglePost extends Component {\n  state = {\n    title: '',\n    author: '',\n    date: '',\n    image: '',\n    content: ''\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n\n    const graphqlQuery = {\n      query: `\n        query FetchPost($postId: ID!){\n          post(postId: $postId) {\n            title\n            image\n            content\n            creator {\n              name\n            }\n            createdAt\n          }\n        }\n      `,\n      variables: {\n        postId\n      }\n    };\n\n    fetch(`/graphql`, {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n\n        fetch(`/media/` + resData.data.post.image, {\n          method: 'get',\n          headers: {\n            Authorization: 'Bearer ' + this.props.token\n          }\n        }).then(image => {\n          image.arrayBuffer().then(a => {\n            this.setState({\n              image:\n                'data:image/png;base64, ' + Buffer.from(a).toString('base64')\n            });\n          });\n\n          if (resData.errors && resData.errors[0].status !== 200) {\n            throw new Error('Failed to fetch post');\n          }\n\n          this.setState({\n            title: resData.data.post.title,\n            author: resData.data.post.creator.name,\n            date: resData.data.post.createdAt,\n            content: resData.data.post.content\n          });\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className='single-post'>\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className='single-post__image'>\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\n\nimport './Logo.css';\n\nconst logo = props => <h1 className=\"logo\">MessageNode</h1>;\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItems.css';\n\nconst navItems = [\n  { id: 'feed', text: 'Feed', link: '/', auth: true },\n  { id: 'login', text: 'Login', link: '/', auth: false },\n  { id: 'signup', text: 'Signup', link: '/signup', auth: false }\n];\n\nconst navigationItems = props => [\n  ...navItems.filter(item => item.auth === props.isAuth).map(item => (\n    <li\n      key={item.id}\n      className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavLink to={item.link} exact onClick={props.onChoose}>\n        {item.text}\n      </NavLink>\n    </li>\n  )),\n  props.isAuth && (\n    <li className=\"navigation-item\" key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  )\n];\n\nexport default navigationItems;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MobileToggle from '../MobileToggle/MobileToggle';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <nav className=\"main-nav\">\n    <MobileToggle onOpen={props.onOpenMobileNav} />\n    <div className=\"main-nav__logo\">\n      <NavLink to=\"/\">\n        <Logo />\n      </NavLink>\n    </div>\n    <div className=\"spacer\" />\n    <ul className=\"main-nav__items\">\n      <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n    </ul>\n  </nav>\n);\n\nexport default mainNavigation;\n","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './MobileNavigation.css';\n\nconst mobileNavigation = props => (\n  <nav className={['mobile-nav', props.open ? 'open' : ''].join(' ')}>\n    <ul\n      className={['mobile-nav__items', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavigationItems\n        mobile\n        onChoose={props.onChooseItem}\n        isAuth={props.isAuth}\n        onLogout={props.onLogout}\n      />\n    </ul>\n  </nav>\n);\n\nexport default mobileNavigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n  !props.link ? (\n    <button\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? 'Loading...' : props.children}\n    </button>\n  ) : (\n    <Link\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      to={props.link}\n    >\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React from 'react';\n\nimport Button from '../../Button/Button';\nimport './Post.css';\n\nconst post = props => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    {/* <div className=\"post__image\">\n      <Image imageUrl={props.image} contain />\n    </div>\n    <div className=\"post__content\">{props.content}</div> */}\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete}>\n        Delete\n      </Button>\n    </div>\n  </article>\n);\n\nexport default post;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n  <div className=\"input\">\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    {props.control === 'input' && (\n      <input\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        type={props.type}\n        id={props.id}\n        required={props.required}\n        value={props.value}\n        placeholder={props.placeholder}\n        onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n        onBlur={props.onBlur}\n      />\n    )}\n    {props.control === 'textarea' && (\n      <textarea\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        id={props.id}\n        rows={props.rows}\n        required={props.required}\n        value={props.value}\n        onChange={e => props.onChange(props.id, e.target.value)}\n        onBlur={props.onBlur}\n      />\n    )}\n  </div>\n);\n\nexport default input;\n","import React from 'react';\n\nimport './Input.css';\n\nconst filePicker = props => (\n  <div className=\"input\">\n    <label htmlFor={props.id}>{props.label}</label>\n    <input\n      className={[\n        !props.valid ? 'invalid' : 'valid',\n        props.touched ? 'touched' : 'untouched'\n      ].join(' ')}\n      type=\"file\"\n      id={props.id}\n      onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n      onBlur={props.onBlur}\n    />\n  </div>\n);\n\nexport default filePicker;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","export const generateBase64FromImage = imageFile => {\n  const reader = new FileReader();\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = e => resolve(e.target.result);\n    reader.onerror = err => reject(err);\n  });\n\n  if (imageFile !== undefined) {\n    reader.readAsDataURL(imageFile);\n  }\n\n  return promise;\n};\n","import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  image: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n    imagePreview: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true\n        },\n        image: {\n          ...prevState.postForm.image,\n          value: this.props.selectedPost.imagePath,\n          valid: true\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true\n        }\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then(b64 => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch(e => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value\n    };\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'title')}\n              valid={this.state.postForm['title'].valid}\n              touched={this.state.postForm['title'].touched}\n              value={this.state.postForm['title'].value}\n            />\n            <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'image')}\n              valid={this.state.postForm['image'].valid}\n              touched={this.state.postForm['image'].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div>\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'content')}\n              valid={this.state.postForm['content'].valid}\n              touched={this.state.postForm['content'].touched}\n              value={this.state.postForm['content'].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React, { Component, Fragment } from 'react';\n\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n    const graphqlQuery = {\n      query: `\n        {\n          user {\n            status\n          }  \n        }\n      `\n    };\n    fetch('/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          throw new Error('Failed to fetch user status.');\n        }\n        this.setState({ status: resData.data.user.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n  }\n\n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n\n    const graphqlQuery = {\n      query: `\n        query FetchPosts($page: Int!) {\n          posts(page: $page) {\n            posts {\n              _id\n              title\n              content\n              image\n              creator {\n                name\n              }\n              createdAt\n            }\n            totalPosts\n          }\n        }\n      `,\n      variables: {\n        page\n      }\n    };\n\n    fetch('/graphql', {\n      method: 'POST',\n      body: JSON.stringify(graphqlQuery),\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors && resData.errors[0].status === 401) {\n          throw new Error('Not authenticated. ');\n        }\n\n        if (resData.errors && resData.errors[0].status !== 401) {\n          throw new Error('Fetching posts failed. ');\n        }\n\n        this.setState({\n          posts: resData.data.posts.posts.map(post => {\n            return {\n              ...post,\n              imagePath: post.image\n            };\n          }),\n          totalPosts: resData.data.posts.totalPosts,\n          postsLoading: false\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    const { status } = this.state;\n    const graphqlQuery = {\n      query: `\n        mutation UpdateStatus($status: String!){\n          updateStatus(status: $status) {\n            status\n          }\n        }\n      `,\n      variables: {\n        status\n      }\n    };\n    fetch('/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          throw new Error(\"Can't update status!\");\n        }\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = postData => {\n    this.setState({\n      editLoading: true\n    });\n    // Set up data (with image!)\n    const formData = new FormData();\n    formData.append('image', postData.image);\n\n    if (this.state.editPost) {\n      formData.append('oldPath', this.state.editPost.imagePath);\n    }\n\n    fetch('/post-image', {\n      method: 'PUT',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: formData\n    })\n      .then(res => res.json())\n      .then(fileResData => {\n        console.log(fileResData);\n        const image = fileResData.filePath\n          ? fileResData.filePath.replace('\\\\', '/')\n          : this.state.editPost.imagePath;\n        const { title, content } = postData;\n        let graphqlQuery = {\n          query: `\n          mutation CreatePost($title:String!,$image: String!,$content:String!) {\n            createPost(postInput: {\n              title: $title\n              image: $image\n              content: $content\n            }) {\n              _id\n              title\n              image\n              content\n              creator {\n                name\n              }\n              createdAt\n            }\n          }\n        `,\n          variables: {\n            title,\n            image,\n            content\n          }\n        };\n\n        if (this.state.editPost) {\n          const { title, content } = postData;\n          const { _id } = this.state.editPost;\n          graphqlQuery = {\n            query: `\n            mutation UpdatePost($_id:ID!, $title:String!,$image:String!,$content:String!){\n              updatePost(\n                postId: $_id,\n                postInput: {\n                title: $title\n                image: $image\n                content: $content\n              }) {\n                _id\n                title\n                image\n                content\n                creator {\n                  name\n                }\n                createdAt\n              }\n            }\n          `,\n            variables: {\n              _id,\n              title,\n              image,\n              content\n            }\n          };\n        }\n\n        return fetch('/graphql', {\n          method: 'POST',\n          body: JSON.stringify(graphqlQuery),\n          headers: {\n            Authorization: 'Bearer ' + this.props.token,\n            'Content-Type': 'application/json'\n          }\n        });\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            resData.errors[0].data.reduce((acc, cur) => acc + cur.message, '')\n          );\n        }\n\n        if (resData.errors && resData.errors[0].status === 403) {\n          throw new Error('Not authorized. ');\n        }\n\n        if (resData.errors && resData.errors[0].status === 401) {\n          throw new Error('Invalid user. ');\n        }\n\n        if (\n          resData.errors &&\n          ![422, 401, 403].includes(resData.errors[0].status)\n        ) {\n          throw new Error('Adding post failed. ');\n        }\n\n        const {\n          _id,\n          title,\n          content,\n          creator,\n          createdAt,\n          image: imagePath\n        } = this.state.editPost\n          ? resData.data.updatePost\n          : resData.data.createPost;\n\n        const post = {\n          _id,\n          title,\n          content,\n          creator,\n          createdAt,\n          imagePath\n        };\n\n        this.setState(prevState => {\n          let updatedPosts = [...prevState.posts];\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              p => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else {\n            updatedPosts.unshift(post);\n          }\n          updatedPosts.length > 2 && updatedPosts.pop();\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false,\n            totalPosts: prevState.totalPosts + 1\n          };\n        });\n      })\n      .catch(err => {\n        let multerError;\n        console.log(err);\n        if (err.message === 'Failed to fetch') {\n          multerError = new Error('File size must be less than 512KB');\n        }\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: multerError ? multerError : err\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n\n    const graphqlQuery = {\n      query: `\n        mutation deletePost($postId: ID!) {\n          deletePost(postId: $postId)\n        }\n      `,\n      variables: {\n        postId\n      }\n    };\n\n    fetch('/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        if (resData.errors && resData.errors[0].status === 403) {\n          throw new Error('Not authorized');\n        }\n        if (resData.errors) {\n          throw new Error('Deleting a post failed!');\n        }\n        this.loadPosts();\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false, error: err });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className='feed__status'>\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type='text'\n              placeholder='Your status'\n              control='input'\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode='flat' type='submit'>\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className='feed__control'>\n          <Button mode='raised' design='accent' onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className='feed'>\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map(post => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={post.createdAt}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n  state = {\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            this.props.onLogin(e, {\n              email: this.state.loginForm.email.value,\n              password: this.state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.loginForm['email'].value}\n            valid={this.state.loginForm['email'].valid}\n            touched={this.state.loginForm['email'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.loginForm['password'].value}\n            valid={this.state.loginForm['password'].valid}\n            touched={this.state.loginForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Login\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Signup extends Component {\n  state = {\n    signupForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      name: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.signupForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.signupForm,\n        [input]: {\n          ...prevState.signupForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        signupForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        signupForm: {\n          ...prevState.signupForm,\n          [input]: {\n            ...prevState.signupForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form onSubmit={e => this.props.onSignup(e, this.state)}>\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.signupForm['email'].value}\n            valid={this.state.signupForm['email'].valid}\n            touched={this.state.signupForm['email'].touched}\n          />\n          <Input\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'name')}\n            value={this.state.signupForm['name'].value}\n            valid={this.state.signupForm['name'].valid}\n            touched={this.state.signupForm['name'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.signupForm['password'].value}\n            valid={this.state.signupForm['password'].valid}\n            touched={this.state.signupForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Signup\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport MainNavigation from './components/Navigation/MainNavigation/MainNavigation';\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\nimport FeedPage from './pages/Feed/Feed';\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost';\nimport LoginPage from './pages/Auth/Login';\nimport SignupPage from './pages/Auth/Signup';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  mobileNavHandler = isOpen => {\n    this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ showBackdrop: false, showMobileNav: false, error: null });\n  };\n\n  logoutHandler = () => {\n    this.setState({ isAuth: false, token: null });\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiryDate');\n    localStorage.removeItem('userId');\n  };\n\n  loginHandler = (event, authData) => {\n    event.preventDefault();\n    const { email, password } = authData;\n    this.setState({ authLoading: true });\n    const graphqlQuery = {\n      query: `\n        query Login($email:String!,$password:String!){\n          login(\n            email: $email,\n            password: $password\n          ) {\n            token\n            userId\n          }\n        }\n      `,\n      variables: {\n        email,\n        password\n      }\n    };\n    fetch('/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            resData.errors[0].data.reduce((acc, cur) => acc + cur.message, '')\n          );\n        }\n\n        if (resData.errors && resData.errors[0].status === 401) {\n          throw new Error('Wrong email or password. ');\n        }\n\n        if (resData.errors && ![422, 401].includes(resData.errors[0].status)) {\n          throw new Error('Login failed. ');\n        }\n\n        const token = resData.data.login.token;\n        const userId = resData.data.login.userId;\n        this.setState({\n          isAuth: true,\n          token,\n          authLoading: false,\n          userId\n        });\n        localStorage.setItem('token', token);\n        localStorage.setItem('userId', userId);\n        const remainingMilliseconds = 60 * 60 * 1000;\n        const expiryDate = new Date(\n          new Date().getTime() + remainingMilliseconds\n        );\n        localStorage.setItem('expiryDate', expiryDate.toISOString());\n        this.setAutoLogout(remainingMilliseconds);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  signupHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    const email = authData.signupForm.email.value;\n    const name = authData.signupForm.name.value;\n    const password = authData.signupForm.password.value;\n    const graphqlQuery = {\n      query: `\n        mutation Signup($email:String!, $name:String!,$password:String!) {\n          createUser(userInput: {\n            email: $email,\n            name: $name,\n            password: $password\n          }) {\n            _id\n            email\n          }\n        }\n      `,\n      variables: {\n        email,\n        name,\n        password\n      }\n    };\n    fetch('/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            resData.errors[0].data.reduce((acc, cur) => acc + cur.message, '')\n          );\n        }\n\n        if (resData.errors && resData.errors[0].status === 409) {\n          throw new Error('User Exists');\n        }\n\n        if (resData.errors && ![422, 409].includes(resData.errors[0].status)) {\n          throw new Error('Signup failed. ');\n        }\n\n        this.setState({ isAuth: false, authLoading: false });\n        this.props.history.replace('/');\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  setAutoLogout = milliseconds => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route\n          path='/'\n          exact\n          render={props => (\n            <LoginPage\n              {...props}\n              onLogin={this.loginHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Route\n          path='/signup'\n          exact\n          render={props => (\n            <SignupPage\n              {...props}\n              onSignup={this.signupHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Redirect to='/' />\n      </Switch>\n    );\n    if (this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Route\n            path='/'\n            exact\n            render={props => (\n              <FeedPage userId={this.state.userId} token={this.state.token} />\n            )}\n          />\n          <Route\n            path='/:postId'\n            render={props => (\n              <SinglePostPage\n                {...props}\n                userId={this.state.userId}\n                token={this.state.token}\n              />\n            )}\n          />\n          <Redirect to='/' />\n        </Switch>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.showBackdrop && (\n          <Backdrop onClick={this.backdropClickHandler} />\n        )}\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n              <MainNavigation\n                onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\n                onLogout={this.logoutHandler}\n                isAuth={this.state.isAuth}\n              />\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={this.state.showMobileNav}\n              mobile\n              onChooseItem={this.mobileNavHandler.bind(this, false)}\n              onLogout={this.logoutHandler}\n              isAuth={this.state.isAuth}\n            />\n          }\n        />\n        {routes}\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}